name: 'publish'

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Create .env
        working-directory: ./tui
        run: |
          echo "PUBLIC_API_URL=${{ secrets.PUBLIC_API_URL }}" >> .env
          echo "PUBLIC_VERSION=${{ github.ref }}" >> .env
          echo "PUBLIC_APP_NAME=Tui Documents" >> .env

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'yarn' # Set this to npm, yarn or pnpm.
          cache-dependency-path: './tui/yarn.lock'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './tui/src-tauri -> target'

      - name: install frontend dependencies
        working-directory: ./tui
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: yarn install # change this to npm or pnpm depending on which one you use.

      - name: build frontend
        working-directory: ./tui
        run: yarn tauri build # change this to npm or pnpm depending on

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: TUI
          path: |
            ./tui/src-tauri/target/release/bundle/nsis/tui_*.exe
            ./tui/src-tauri/target/release/bundle/msi/tui_*.msi
            ./tui/src-tauri/target/release/bundle/deb/tui_*.deb
            ./tui/src-tauri/target/release/bundle/rpm/tui_*.rpm

  release:
    runs-on: ubuntu-latest
    needs: publish-tauri
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: TUI
          path: ./artifacts

      - name: Create Release
        run: |
          set -x
          assets=()
          for asset in ./artifacts/**/*; do
            assets+=("$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          gh release create "$tag_name" "${assets[@]}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
